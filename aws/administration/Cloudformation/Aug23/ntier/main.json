{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a ntier architecture",
    "Parameters": {
        "vpccidr": {
            "Description": "vpc cidr range",
            "Type": "String",
            "Default": "10.10.0.0/16"
        },
        "subnetcidrs": {
            "Description": "These are subnet ranges",
            "Type": "CommaDelimitedList",
            "Default": "10.10.0.0/24,10.10.1.0/24,10.10.2.0/24,10.10.3.0/24"
        },
        "webami": {
            "Description": "Ami id of web ec2",
            "Type": "AWS::EC2::Image::Id"
        },
        "webinstancetype": {
            "Description": "instance type",
            "Type": "String",
            "Default": "t2.micro"
        },
        "webkey": {
            "Description": "key pair for web",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "db1subnetaz": {
            "Description": "az for db1 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "db2subnetaz": {
            "Description": "az for db2 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "websubnetaz": {
            "Description": "az for web subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "appsubnetaz": {
            "Description": "az for app subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "primaryvnet"
                    }
                ]
            }
        },
        "websubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "websubnetaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web"
                    }
                ]
            }
        },
        "appsubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "appsubnetaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app"
                    }
                ]
            }
        },
        "dbsubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "db1subnetaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db1"
                    }
                ]
            }
        },
        "db2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "db2subnetaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db2"
                    }
                ]
            }
        },
        "igw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntier igw"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "InternetGatewayId": {
                    "Ref": "igw"
                }
            }
        },
        "publicrt": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "public"
                    }
                ]
            }
        },
        "privatert": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "private"
                    }
                ]
            }
        },
        "igwroute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicrt"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "igw"
                }
            }
        },
        "webtopublic": {
            "Description": "associate web subnet to public route table",
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicrt"
                },
                "SubnetId": {
                    "Ref": "websubnet"
                }
            }
        },
        "apptoprivate": {
            "Description": "associate app subnet to private route table",
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "privatert"
                },
                "SubnetId": {
                    "Ref": "appsubnet"
                }
            }
        },
        "dbtoprivate": {
            "Description": "associate db subnet to private route table",
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "privatert"
                },
                "SubnetId": {
                    "Ref": "dbsubnet"
                }
            }
        },
        "websg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "this is for web servers",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "websg"
                    }
                ]
            }
        },
        "appsg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This opens necessary ports for app servers",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 0,
                        "ToPort": 65535,
                        "CidrIp": {
                            "Ref": "vpccidr"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appsg"
                    }
                ]
            }
        },
        "dbsg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This opens necessary ports for db servers",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 3306,
                        "ToPort": 3306,
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsg"
                    }
                ]
            }
        },
        "webec2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "webami"
                },
                "InstanceType": {
                    "Ref": "webinstancetype"
                },
                "KeyName": {
                    "Ref": "webkey"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": true,
                        "SubnetId": {
                            "Ref": "websubnet"
                        },
                        "GroupSet": [
                            {
                                "Ref": "websg"
                            }
                        ],
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "webec2"
                    }
                ]
            }
        },
        "rdsDBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "this is db subnet",
                "SubnetIds": [
                    {
                        "Ref": "dbsubnet"
                    },
                    {
                        "Ref": "db2subnet"
                    }
                ],
                "Tags": []
            }
        },
        "dbinstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": "20",
                "DBInstanceClass": "db.t2.micro",
                "AllowMajorVersionUpgrade": false,
                "AutoMinorVersionUpgrade": false,
                "BackupRetentionPeriod": 0,
                "DBInstanceIdentifier": "qtrdsdb",
                "DBName": "employee",
                "VPCSecurityGroups": [
                    {
                        "Ref": "dbsg"
                    }
                ],
                "DBSnapshotIdentifier": "",
                "DBSubnetGroupName": {
                    "Ref": "rdsDBSubnetGroup"
                },
                "Engine": "mysql",
                "EngineVersion": "8.0",
                "MasterUsername": "admin",
                "MasterUserPassword": "adminadmin",
                "MultiAZ": false,
                "PubliclyAccessible": false,
                "StorageType": "gp2",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierdb"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "webip": {
            "Value": {
                "Fn::GetAtt": [
                    "webec2",
                    "PublicIp"
                ]
            }
        },
        "dbendpoint": {
            "Value": {
                "Fn::GetAtt": [
                    "dbinstance",
                    "Endpoint.Address"
                ]
            }
        }
    }
}